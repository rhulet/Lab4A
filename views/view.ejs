<%/****************************************************************************************
 This page contains the HTML for the /memes/:userId/view path. Populate this
 page similar to memes.ejs but with images from a single user instead of all users.
 ***************************************************************************************/%>

<!DOCTYPE html>
<html>

<head>
	<meta charset='utf-8'>
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<script type='text/javascript' src="http://code.jquery.com/jquery-latest.min.js"></script>
	<script type='text/javascript' src='/js/bootstrap.min.js'></script>
	<script type='text/javascript' src="/socket.io/socket.io.js"></script>

	<link rel='stylesheet' type='text/css' href='/css/bootstrap.min.css'>
	<link rel='stylesheet' type='text/css' href='/css/bootstrap-responsive.min.css'>
	<link rel='stylesheet' type='text/css' href='/css/style.css'>

	<title>MEMES!</title>
</head>

<body class="bd">
	<div class='navbar navbar-inverse'>
		<div class='navbar-inner'>
			<div class='container'>
				<button type="button" class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
					<span class="icon-bar"></span>
					<span class="icon-bar"></span>
					<span class="icon-bar"></span>
				</button>
				<div class='nav-collapse collapse'>
					<ul class='nav'>
						<li id='home-nav-item'><a href='/memes'>Memes</a></li>
						<li id='home-nav-item'><a href='/login'>Login</a></li>
					</ul>
					<ul class='nav pull-right'>
						<li><a href='#'>Welcome
								<!--
												You will want to add code here (PART 2) to allow you to display a custom message if a user is
												logged in (Welcome Bob!) or a generic message if no one is logged into the site (Welcome Guest User).
												Similarly, if a user is not logged in you want a login button to display and no logout button,
												but if a user is logged in then you want to display a logout button. You may need to break in
												and out of Node JS several times using "< % % >" and "< %= % >"
											 -->
							</a></li>
					</ul>
				</div>
			</div>
		</div>
	</div>
	<div class="row-fluid">
		<time></time>
		<div id="wrapper">
			<div id="columns">
				<!--
								 The following lines break out of html into ejs to process data passed to the view
								 from the controller. The "<% %>" indicates that you are breaking out of and then back into html.
								 Notice that the open bracket for the for loop starts here, but ends after the html, meaning that
								 the html between will be printed each time through the loop
								-->
				<% for(var i = 0, len = imageList.length; i < len; i++){
									var current_image = imageList[i];%>
				<!-- Here are examples of printing out a variable's value with "< %= % >" -->
				<div class="pin back-image" id="block<%=current_image.imageId%>">
					<img src="<%=current_image.imagePath%>" alt="<%=current_image.altText%>">

					<!-- this button is for "liking" the image. On click it passes the image id and the button's id to the updateLikeCount function -->
					<button class="btn btn-primary btn-mini float-left" id="like<%=current_image.imageId %>"
						type="button" onClick="updateLikeCount(<%=current_image.imageId%>, this.id);">Likes:
						<%=current_image.numLikes%></button><br>

					<!-- this button is a link to a user specific page -->
					<a class="btn btn-info btn-mini" style="margin-top:5px;"
						href="/memes/<%=current_image.userId%>/view">More by <%=current_image.userName%></a>
				</div>
				<% } %>
			</div>
		</div>
	</div>
</body>

</html>